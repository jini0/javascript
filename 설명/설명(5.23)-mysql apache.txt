관계형 데이터 베이스
RDBMS
종류: 오라클(유료), mysql(무료), MariaDB, MS-Access
특징: 데이터 베이스를 테이블 형태로 표현

비관계형 데이터 베이스
거대한 양의 데이터와 비정형 데이터가 
포함된 데이터를 저장하고 사용하는 기술
종류: MongoDB, HBase, Cassndra

1) 데이터 정의 언어 (DDL : Data Definition Language)
DB구조, 데이터 형식, 접근 방식 DB를 구축하거나 수정할 목적으로 사용하는 언어
- CREATE : 생성
- ALTER : 변경
- DROP : 삭제

★쿼리문은 대문자 소문자 상관없음!★

-CREATE
1.데이터 베이스 생성
create database 데이터베이스이름
ex> create database test       --> 데이터베이스가 만들어짐
2.테이블 생성
create table 테이블명(
	컬럼명 데이터타입 [옵션],
	컬럼명 데이터타입 [옵션],
	...
)
ex>
num name email tel addr
create table bbs(
	num int primary key auto_increment,		//컬럼명 쓰고 띄어쓰기 한 다음 데이터 타입 적어줌 int 숫자  /primary key : 옵션
	name varchar(20) not null,			//컬럼에 들어가는 타입! varchar(최대값)  : 문자로
	email varchar(50) not null,			//옵션 auto_increment 이것두 옵션 : 자동으로 붙이겟다
	tel varchar(13) not null,			//옵션 not null : 비우면 안됨(무조건 값을 줘야함)
	addr varchar(50)
)
---mysql에 적어주기
create table bbs(
	num int primary key auto_increment,		
	name varchar(20) not null,			
	email varchar(50) not null,			
	tel varchar(13) not null,			
	addr varchar(50)
)
----
* 데이터 타입
1. 가변문자열 : varchar(n) ★		
2. 고정문자열 : char(n)
3. 숫자 : int ★
4. 날짜 : date ★
5. 텍스트 : text
6. 열거형 : enum

가변 문자열 vs 고정 문자열
-가변 문자열 varchar(20) : 최대 20칸을 사용하지만 5개가 들어오면 5칸을 사용하고 15칸을 날림 - 데이터 낭비가 없음(메모리 낭비 줄임)
-고정 문자열 char(20): 무조건 공간 20칸을 확보, 5개가 들어와도 20칸을 차지

* 옵션
1. primary key : 기본키 (중복불가, not null)
2. not null : 필수입력
3. null : 널값 허용
4. unique : 유일값(중복불가)
5. auto_increment : 자동증가값


-DROP 데이터베이스 삭제, 테이블 삭제
1)데이터 베이스 삭제
DROP DATABASE 데이터베이스명
2)테이블 삭제
DROP TABLE 테이블 명

- ALTER 테이블 컬럼 수정
1)테이블에 컬럼추가
쿼리문> ALTER table 테이블 명 ADD COLUMN 컬럼명 컬럼타입
alter table bbs add column userId varchar(20);
2)테이블의 컬럼 타입 변경하기
쿼리문> ALTER table 테이블 명 MODIFY COLUMN 컬럼명 컬럼타입
alter table bbs modify column userId int; 		//컬럼타입을 int로 변경
3)테이블의 컬럼 삭제하기
쿼리문> ALTER table 테이블 명 DROP COLUMN 컬럼명 
alter table bbs drop column userId;		//컬럼명이 userId인 애를 삭제하겠다
4)테이블의 컬럼 이름 변경하기
쿼리문> ALTER TABLE 테이블 명 CHANGE COLUMN 컬럼명 새로운 컬럼명 컬럼타입
ex>  alter table bbs change column addr address varchar(60);






2) 데이터 조작 언어 DML
1.데이터 생성 insert
쿼리문 > insert into 테이블명 (column1, column2,...)
valuese(value1, value2,...)
ex>
insert into bbs(name,email,tel,addr)
values ('이순신','test@test.com','010-1234-1234','울산시 남구 삼산동');

insert into bbs(name,email,tel,addr)
values ('홍길동','test@test.com','010-1111-1111','울산시 남구 달동');

insert into bbs(name,email,tel,addr)
values ('김유신','abc@abc.com','010-1111-1234','울산시 동구 서부동');

2.데이터 조회 select
쿼리문 > select * from 테이블명
ex> select * from bbs;		// * 모든 컬럼 다 보겠다
ex> select name from bbs;		// name만 보겠다
      select email from bbs; 	~~~

--
select 컬럼명
from 테이블 명
where 컬럼명 조건절
order by 컬렴명 asc(오름차순) | desc(내림차순)

조건절
1. 비교문
> 크다
>= 크거나 같다
<= 작거나 같다
< 작다
= 같다
<> 같지 않다.

2. 논리
and
or
not

3. 범위
between A and B

4. 패턴
like %
ex> like '김%'      	--> 김으로 시작하는 데이터들만 조회하겠다
      like '%광역시'		--> 광역시들만 조회하겠다

5. is null, is not null

-----
정렬
1. asc 오름차순
order by 컬럼명 asc
ex> order by pname asc			
--> pname 컬럼명을 기준으로 오름차순 정렬
2. desc 내림차순
order by 컬럼명 desc
ex> order by pname desc
--> pname 컬럼명을 기준으로 내림차순 정렬

Q.
employee 표에서,
문제01)이름이 김씨인 사람의 모든 컬럼을 검색
select * from employee		  //모든 컬럼이라서 *별표
where pname like "김%";
문제02)퇴사한 사람의 이름과 퇴사일 검색
select pname, firedate from employee
where firedate is not null;
문제03)보너스를 받지 않은 사람의 이름을 검색
select pname from employee
where bonus is null;
문제04)job이 사원인 사람의 사원번호, 이름, 직급순으로 출력(이름을 오름차순으로 정렬)
select perno, pname, job from employee
where job = '사원'
order by pname asc;

--
#문제1
mysql> select * from employee
    -> where pname like "김%";
+-------+--------+------+------------+------------+---------+-------+--------+
| perno | pname  | job  | hiredate   | firedate   | sal     | bonus | deptno |
+-------+--------+------+------------+------------+---------+-------+--------+
|     6 | 김태환 | 대리 | 2010-08-01 | 2012-04-30 | 1700000 |  NULL |     20 |
|    13 | 김진수 | 사원 | 2012-03-02 | NULL       |  880000 |  NULL |     40 |
|    14 | 김성하 | 사원 | 2012-04-01 | NULL       | 1000000 |  NULL |     40 |
+-------+--------+------+------------+------------+---------+-------+--------+
3 rows in set (0.00 sec)

문제02)퇴사한 사람의 이름과 퇴사일 검색
select pname, firedate from employee
where firedate is not null;			//firedate가 null이 아니라 값이 있는거라 퇴사자 알 수 있음

#문제2
mysql> select pname, firedate from employee
    -> where firedate is not null;
+--------+------------+
| pname  | firedate   |
+--------+------------+
| 박청규 | 2012-08-31 |
| 이봉수 | 2012-02-28 |
| 김태환 | 2012-04-30 |
| 강대원 | 2012-08-31 |
+--------+------------+
4 rows in set (0.00 sec)


#문제2-1
mysql> select pname, firedate from employee
    -> where firedate is null;			//퇴사 안한 사람들
+--------+----------+
| pname  | firedate |
+--------+----------+
| 강원일 | NULL     |
| 허태훈 | NULL     |
| 윤주옹 | NULL     |
| 배현직 | NULL     |
| 전민철 | NULL     |
| 심승진 | NULL     |
| 유성원 | NULL     |
| 안재연 | NULL     |
| 김진수 | NULL     |
| 김성하 | NULL     |
| 황철원 | NULL     |
| 엄효인 | NULL     |
+--------+----------+
12 rows in set (0.00 sec)

문제03)보너스를 받지 않은 사람의 이름을 검색
select pname from employee
where bonus is null;

#문제3
mysql> select pname from employee
    -> where bonus is null;
+--------+
| pname  |
+--------+
| 박청규 |
| 윤주옹 |
| 김태환 |
| 심승진 |
| 유성원 |
| 김진수 |
| 김성하 |
| 엄효인 |
+--------+
8 rows in set (0.00 sec)

문제04)job이 사원인 사람의 사원번호, 이름, 직급순으로 출력(이름을 오름차순으로 정렬)
select pname, perno, job from employee
where job like '사원%'		// 내가한거
order by pname asc;

#문제4
mysql> select perno, pname, job from employee
    -> where job = '사원'
    -> order by pname asc;
+-------+--------+------+
| perno | pname  | job  |
+-------+--------+------+
|    14 | 김성하 | 사원 |
|    13 | 김진수 | 사원 |
|     1 | 박청규 | 사원 |
|    16 | 엄효인 | 사원 |
|     5 | 윤주옹 | 사원 |
+-------+--------+------+
5 rows in set (0.00 sec)




-----------mysql 입력해보기-----------------

mysql> create database test;
Query OK, 1 row affected (0.01 sec)

mysql> show databases;         --세미콜론 바로 찍어주기
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sakila             |
| sys                |
| world              |
+--------------------+
6 rows in set (0.00 sec)

mysql> use test
Database changed

mysql> create table bbs(
    -> num int primary key auto_increment,
    -> name varchar(20) not null,
    -> email varchar(50) not null,
    -> tel varchar(13) not null,
    -> addr varchar(50)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> show tables;
+----------------+
| Tables_in_test |
+----------------+
| bbs            |
+----------------+
1 row in set (0.00 sec)

mysql> desc bbs;
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| num   | int         | NO   | PRI | NULL    | auto_increment |
| name  | varchar(20) | NO   |     | NULL    |                |
| email | varchar(50) | NO   |     | NULL    |                |
| tel   | varchar(13) | NO   |     | NULL    |                |
| addr  | varchar(50) | YES  |     | NULL    |                |
+-------+-------------+------+-----+---------+----------------+
5 rows in set (0.00 sec)

mysql> insert into bbs(name,email,tel,addr)
    -> values ('이순신','test@test.com','010-1234-1234','울산시 남구 삼산동');
Query OK, 1 row affected (0.01 sec)

mysql> select * from bbs;
+-----+--------+---------------+---------------+--------------------+
| num | name   | email         | tel           | addr               |
+-----+--------+---------------+---------------+--------------------+
|   1 | 이순신 | test@test.com | 010-1234-1234 | 울산시 남구 삼산동 |
+-----+--------+---------------+---------------+--------------------+
1 row in set (0.00 sec)

mysql> insert into bbs(name,email,tel,addr)
    -> values ('홍길동','test@test.com','010-1111-1111','울산시 남구 달동');
Query OK, 1 row affected (0.01 sec)

mysql> insert into bbs(name,email,tel,addr)
    -> values ('김유신','abc@abc.com','010-1111-1234','울산시 동구 서부동');
Query OK, 1 row affected (0.01 sec)

mysql> select * from bbs;
+-----+--------+---------------+---------------+--------------------+
| num | name   | email         | tel           | addr               |
+-----+--------+---------------+---------------+--------------------+
|   1 | 이순신 | test@test.com | 010-1234-1234 | 울산시 남구 삼산동 |
|   2 | 홍길동 | test@test.com | 010-1111-1111 | 울산시 남구 달동   |
|   3 | 김유신 | abc@abc.com   | 010-1111-1234 | 울산시 동구 서부동 |
+-----+--------+---------------+---------------+--------------------+
3 rows in set (0.00 sec)

mysql> DROP table bbs;
Query OK, 0 rows affected (0.02 sec)

mysql> show tables;
Empty set (0.00 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sakila             |
| sys                |
| test               |
| world              |
+--------------------+
7 rows in set (0.00 sec)

mysql> drop database test;				//test 삭제
Query OK, 0 rows affected (0.01 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sakila             |
| sys                |
| world              |
+--------------------+
6 rows in set (0.00 sec)

mysql> create database test;
Query OK, 1 row affected (0.01 sec)

mysql> use test;
Database changed

mysql> create table bbs(
    -> num int primary key auto_increment,
    -> name varchar(20) not null,
    -> email varchar(50) not null,
    -> phone varchar(15) not null,
    -> addr varchar(50)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> desc bbs;
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| num   | int         | NO   | PRI | NULL    | auto_increment |
| name  | varchar(20) | NO   |     | NULL    |                |
| email | varchar(50) | NO   |     | NULL    |                |
| phone | varchar(15) | NO   |     | NULL    |                |
| addr  | varchar(50) | YES  |     | NULL    |                |
+-------+-------------+------+-----+---------+----------------+
5 rows in set (0.00 sec)

mysql> insert into bbs(name, email, phone, addr)
    -> values('김그린','test@test.com','010-1234-1111','울산시 남구 삼산동');
Query OK, 1 row affected (0.01 sec)

mysql> select * from bbs;
+-----+--------+---------------+---------------+--------------------+
| num | name   | email         | phone         | addr               |
+-----+--------+---------------+---------------+--------------------+
|   1 | 김그린 | test@test.com | 010-1234-1111 | 울산시 남구 삼산동 |
+-----+--------+---------------+---------------+--------------------+
1 row in set (0.00 sec)

mysql> alter table bbs add column userId varchar(20);
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc bbs;
+--------+-------------+------+-----+---------+----------------+
| Field  | Type        | Null | Key | Default | Extra          |
+--------+-------------+------+-----+---------+----------------+
| num    | int         | NO   | PRI | NULL    | auto_increment |
| name   | varchar(20) | NO   |     | NULL    |                |
| email  | varchar(50) | NO   |     | NULL    |                |
| phone  | varchar(15) | NO   |     | NULL    |                |
| addr   | varchar(50) | YES  |     | NULL    |                |
| userId | varchar(20) | YES  |     | NULL    |                |
+--------+-------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

mysql> alter table bbs modify column userId int;		//컬럼타입을 int로 변경
Query OK, 1 row affected (0.07 sec)
Records: 1  Duplicates: 0  Warnings: 0

mysql> desc bbs;
+--------+-------------+------+-----+---------+----------------+
| Field  | Type        | Null | Key | Default | Extra          |
+--------+-------------+------+-----+---------+----------------+
| num    | int         | NO   | PRI | NULL    | auto_increment |
| name   | varchar(20) | NO   |     | NULL    |                |
| email  | varchar(50) | NO   |     | NULL    |                |
| phone  | varchar(15) | NO   |     | NULL    |                |
| addr   | varchar(50) | YES  |     | NULL    |                |
| userId | int         | YES  |     | NULL    |                |	//int가 됐음
+--------+-------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

mysql> alter table bbs drop column userId;		//컬럼명이 userId인 애 삭제
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc bbs;
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| num   | int         | NO   | PRI | NULL    | auto_increment |
| name  | varchar(20) | NO   |     | NULL    |                |
| email | varchar(50) | NO   |     | NULL    |                |
| phone | varchar(15) | NO   |     | NULL    |                |
| addr  | varchar(50) | YES  |     | NULL    |                |
+-------+-------------+------+-----+---------+----------------+
5 rows in set (0.00 sec)




//Query OK 가 뜨면 -> 데이터가 하나 들어간거!

//잘못 적었을 때 빠져나오려면 
ctrl+c 하면 빠져나옴