함수
1.함수선언문   ---- 호이스팅됨(자바스크립트엔진이~)
function myFunc(){		
	       //() 매개변수
	return;    //이 함수가 하는 역할을 다 한거!
	let num = 20;
	return num;
}
myFunc();   	//함수이름 불러주면 -> 함수호출
          //()함수 호출시 주는 값: 인수
---
myFunc(10,20);	//함수선언문보다 호출을 위에 적어줘도 함수가 호이스팅되어 제일 위로 간거처럼 여겨져서!!
function myFunc(num1,num2){
	return num1 + num2;
}
//myFunc(10,20);


2.함수표현식      --호이스팅되지 않음
//myFunc2(5,10);  --> 이렇게 안됨!!주의!!!(호이스팅안되니까 이렇게 호출먼저 할 수 없음!!!)
let myFunc2 = function(num1,num2){
	return num1 + num2;
}
myFunc2(5,10);

3.화살표 함수(arrow함수)
-무기명 함수(함수명이 없는 애들)는 화살표 함수로 변경할 수 있다.
function(num1,num2){
	return num1 + num2;
}
-->화살표 함수로
1)function 대신 => 로 바꿔줌
2)매개변수가 하나면 ()생략가능
   두개 이상일 땐 ()생략안됨!
   함수           -->     화살표 함수로 변경
   function(){}  ---->   () => {}
   function(num){}   --->  num => {}
   function(num1,num2){}   ---> (num1,num2) => {}
3)실행문이 한 줄일 때는 {} 생략가능
function(num1,num2){console.log(num1+num2)};
--->
(num1,num2) => console.log(num1+num2);
4)실행문이 리턴을 포함한 한 줄일 때는 리턴도 생략가능
function(num1,num2){ return num1+num2; }
--> (num1+num2) => num1+num2;



-----

*나머지 매개변수??
나머지 인수를 다 묶어서 배열로 넘겨줌(남아있는 인수를 모음)
매개변수가 여러개일때 항상 마지막에 있어야함.
1,2,3,4,5,6,7   --> [1,2,3,4,5,6,7] 로 바꿔주는 거임!

구문>  ...매개변수명
function sumAll(a,b,...c){

}
sumAll(10,20,30,40,50);



ex>
function sum(num1,num2){
	return num1+num2;
}
sum(10,20,30);  //호출하는데 매개변수가 2개인데 인수를 3개를 넣음 -->error가 발생하진 않고 알아서 10,20만 차례로 들어감
	       //함수를 두개만 받도록 했는데 호출시 3개를 적은거

---
arguments객체 (나머지 변수 나오기 전) 
function sum(num1,num2){	
	console.log(arguments[0]);	//매개변수로 받지는 않지만 arguments를 이용하면 인수에 접근할 수 있다는거!
	console.log(arguments[1]);
	console.log(arguments[2]);
	return num1+num2;					
}
sum(10,20,30); 

--
나머지 매개변수 이용
function sum(num1,...num2){		//이렇게 ... 세개를 적어주면 적어주기(여러개의 값을 받을 수 있는 매개변수를 만들 수 있음)
	return num1+num2;					--->나머지 매개변수
}
sum(10,20,30); 		//num1 - 10을 받음 / ...num2 - 20, 30을 받음		


-----------
*스프레드 문법  ...배열변수명
-배열의 값을 그대로 나열
[1,2,3,4,5,6,7]  --> 1,2,3,4,5,6,7 로 바꿔줌(나머지매개변수와 반대)

>>배열에 있는 값 중에 제일 큰 애 구하고 싶을 때 등에 사용
cf.console창

Math - 내장객체(수학계산해주는)

Math.random();
0.8015834000076869

Math
Math?{abs: ?, acos: ?, acosh: ?, asin: ?, asinh: ?,?…}E: 2.718281828459045LN2: 0.6931471805599453LN10: 2.302585092994046LOG2E: 1.4426950408889634LOG10E: 0.4342944819032518PI: 3.141592653589793SQRT1_2: 0.7071067811865476SQRT2: 1.4142135623730951abs: ? abs()acos: ? acos()acosh: ? acosh()asin: ? asin()asinh: ? asinh()atan: ? atan()atan2: ? atan2()atanh: ? atanh()cbrt: ? cbrt()ceil: ? ceil()clz32: ? clz32()cos: ? cos()cosh: ? cosh()exp: ? exp()expm1: ? expm1()floor: ? floor()fround: ? fround()hypot: ? hypot()imul: ? imul()log: ? log()log1p: ? log1p()log2: ? log2()log10: ? log10()max: ? max()min: ? min()pow: ? pow()random: ? random()round: ? round()sign: ? sign()sin: ? sin()sinh: ? sinh()sqrt: ? sqrt()tan: ? tan()tanh: ? tanh()trunc: ? trunc()Symbol(Symbol.toStringTag): "Math"[[Prototype]]: Object

Math.min(1,2,3,4,5)
1

Math.max(1,2,3,4,5)
5

Math.max([1,2,3,4,5])	-->Math.max   - [1,2,3,4,5]배열은 문자가 아니라 값이 안뜸
NaN

let arr10 = [10,20,30,40,50]
undefined

Math.min(arr10)
NaN

Math.min(...arr10)
10

let arr20 = [11,22,33,44,55]
undefined

Math.max(..arr10, ...arr20)
55

----
*배열복사
let arr1 = [1,2,3]
let arr2 = arr1;

+)
기본형 데이터 타입
Number, String, null, Boolean, undefined 

참조형 데이터 타입
Object, function



