Math 내장객체
-객체가 가지고 있는 메서드
Math.random()
Math.floor()
Math.ceil()
Math.round()
Math.min()
Math.max()
Math.abs()    :절댓값

ex> 콘솔창
Math
Math?{abs: ?, acos: ?, acosh: ?, asin: ?, asinh: ?,?…}E: 2.718281828459045LN2: 0.6931471805599453LN10: 2.302585092994046LOG2E: 1.4426950408889634LOG10E: 0.4342944819032518PI: 3.141592653589793SQRT1_2: 0.7071067811865476SQRT2: 1.4142135623730951abs: ? abs()acos: ? acos()length: 1name: "acos"arguments: (...)caller: (...)[[Prototype]]: ? ()[[Scopes]]: Scopes[0]acosh: ? acosh()asin: ? asin()asinh: ? asinh()atan: ? atan()atan2: ? atan2()atanh: ? atanh()cbrt: ? cbrt()ceil: ? ceil()clz32: ? clz32()cos: ? cos()cosh: ? cosh()exp: ? exp()expm1: ? expm1()floor: ? floor()fround: ? fround()hypot: ? hypot()imul: ? imul()log: ? log()log1p: ? log1p()log2: ? log2()log10: ? log10()max: ? max()min: ? min()pow: ? pow()random: ? random()round: ? round()sign: ? sign()sin: ? sin()sinh: ? sinh()sqrt: ? sqrt()tan: ? tan()tanh: ? tanh()trunc: ? trunc()Symbol(Symbol.toStringTag): "Math"[[Prototype]]: Object

Math.random();
0.7287428337425335

Math.random();
0.5048374077371875

let arr100 = [1,2,3,4,5,6]
undefined

Math.max(...arr100)
6

Math.min(...arr100)
1

Math.abs(100)
100

Math.abs(11.1234)
11.1234

Math.abs(-11.1234)
11.1234


--------------
Q3.문제
<나누어 떨어지는 숫자 배열>
문제설명
array의 값 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수,
					//오름차순 아직 안배워서 나중에~!
solution을 작성해주세요. divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요.

제한사항
arr은 자연수를 담은 배열입니다.
정수 i, j에 대해 i =/ j 이면 arr[i] =/ arr[j] 입니다.   =/   : 같지 않다
divisor는 자연수입니다.
array는 길이 1이상인 배열입니다.
입출력 예
arr                  diviso             return
-------------------------------------------
[5, 9, 7, 10]          5                 [5, 10]
[2, 36, 1, 3]          1                 [1, 2, 3, 36]
[3, 2, 6]	            10               [-1]
입출력 예 설명
입출력 예#1
arr의 원소 중 5로 나누어 떨어지는 원소는 5와 10입니다. 따라서 [5, 10]을 리턴합니다.

입출력 예#2
arr의 모든 원소는 1으로 나누어 떨어집니다. [2, 36, 1, 3]을 리턴합니다.

입출력 예#3
나누어 떨어지지 않음 -> -1반환