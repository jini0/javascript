_33회차 PPT참고_

alert("6"/"2")   -->나누기 /를 적용한 경우 6과 2가 따옴표에 있으니
		문자열인데 숫자형으로 자동변환되어 --> 3으로 나옴

parselnt(문자)   : 정수형 숫자로 변환
parseFloat(문자) : 실수형(소수점까지) 숫자로 변환
ex>let number2 = 5.284;
parselnt(number2) = 5;
parseFloat(number2) = 5.284;

---		
                            형변환 후
Number(null)          -> 0
Number(undefined) -> NaN
Number(true)          -> 1
Number(false)         -> 0

----ex>콘솔에 적어본거 <문자형으로 변환>

let y = 98.98765;
undefined

y
98.98765

let d = y.toFixed(2)
undefined

d
'99.0'

let e = y.toFixed(2)
undefined

e
'98.99'

let f = y.toFixed(3)
undefined

f
'98.988'

let g = y.toFixed()
undefined

g
'99'

-------ex>콘솔에 적어본거 <불린형으로 변환>

Boolean(0)     ->숫자 0은 false // 나머지 숫자는 true
false

Boolean(123)
true

Boolean("")       -->빈문자열                
false

Boolean(" ")       -->  빈문자열은 아무것도 없는거!! " " 있는건 빈문자열 아님 (띄어쓰기 있어서)
true

Boolean(null)
false

Boolean(undefined)
false

Boolean(NaN)
false

Boolean(Number('abc'))
false

----

나머지 연산자 %
ex> %5  : 어떤 큰 숫자로 나누던 나누는 5보다 적은 수가 나머지로 나옴
      %4  : 0, 1, 2, 3  (O)     4 (X)

----ex>콘솔에 적은거 <할당연산자-대입연산자>(복합대입연산자)
let a =2
undefined

a
2

a = a + 5
7

a +=2      -->7이 된 a에 +2해서 9가 된거
9

----ex>콘솔에 적은거 <증가 감소 연산자>
		    변수에만 쓸 수 있음 숫자엔 불가능
		     a++ (O)   /   5++ (X)
*후위형
let a = 1;
undefined

a++
1

a++
2

a++
3

a++
4

a--
5

a--
4

a--
3

--
*전위형
let b =1;
undefined

++b
2

++3  ->error 숫자엔 쓸 수 없음

++b
3

----
35회차 논리연산자PPT

<비교연산자>
동등연산자    '1' == 1   -true   
일치연산자    '1' === 1 -false                 ★일치연산자가 좀 더 명확한 것!
    -->값은 1로 같지만 반환값은 true/flase로 다름
5>6 -> false
4<8 -> true

ex>콘솔에 적은거 
1 <10
true

10 > 15
false

'123' == 123
true

'123' === 123
false

1 == true
true

"안녕" == true
false

12 != 34
true

0 == false
true

undefined == false
false

null == false
false

"" == false     ★->빈문자열
true

0 == false      ★
true

123 == true
false

1 == true       ★
true

"안녕" == true
false

null == undefined
true

null === undefined
false

0 == ""                ->0과 빈문자열도 true  
true 

0 == " "               ->빈문자열과 공백은 똑같다고 봄
true

0 == "ddd"
false

0 === " "
false

---------
<논리연산자>
||     (or)
&& (and)

ex>
true || false
true

true || true
true

1>0 || 5>6           -->좌측이 true ||는 or이니까 하나라도 true면 true임
true 

1>0 && 5>6        -->&&는 and니까 둘 다 ture여야 true임, 우측이 틀리니false
false

1 || 0
1

Boolean(1)
true

Boolean(0)
false

----------------
false 값
--> 0 , ""(빈요소) 
cf. 공백(X)

----PPT 10페이지 <단락평가>
alert(1 || 0)         -1은 불린형으로 하면 true /0은 불린형으로 false
undefined          - 경고창에 1 이라고 뜸
		1 0
		--->  왼쪽에서 오른쪽으로 평가를 시작함	     
			1이 true라 이미 왼쪽에서 끝남!
			true인 값 1이 반환되는 거임	
			첫번째 true값을 만나서 더 이상 코드를 실행하지 않음

alert(null || "안녕") -null은 불린형 false / 안녕은 불린형 true
undefined            -->안녕 이 경고창에 뜸  ((ture가 뜨는게 아니라 true를 찾아서 그 원래 값(안녕)을 반환해주는 거임)
		    왼쪽이 false라 오른쪽으로 진행되어 오른쪽의 true값을 찾는것

alert( undefined || null || 0 )   -undefined의 불린형은false / null은 불린형 false / 0 불린형으로 false
undefined                          -모두 다 값이 false면 맨 마지막꺼가 뜸 --> 0이 경고창에 뜸

------

console.log( 0 && "안녕")
 0      -->false를 찾음(0)
undefined

console.log( "안녕하세요" && "여러분")
여러분     -->다 true면 맨마지막꺼
undefined

console.log(null && "안녕")
null      -->false를 찾음(null)
undefined

console.log( "" && "안녕")
             -->false를 찾음 (빈요소)
undefined

console.log(1 && 2 && null && 3)
null     -->false를 찾음(null)
undefined

console.log(1 && 2 && 3 && 4)
4              --->값이 다 true면 맨마지막꺼
undefined

--

alert( !true)
undefined
경고창에 false

alert( !false)
undefined
경고창에 true

alert( !!true)    ->!true : true가 아닌게(false)  ! 아니다 
undefined
경고창에 true

alert( !0)
undefined
경고창에 true

alert( !123)
undefined
경고창에 false

alert( !"")
undefined
경고창에 true

alert( !" ")
undefined
경고창에 false

alert( null || 2 || undefined)
undefined
경고창에 2가 뜸


----
<length를 이용하면 글자 수 알 수 있음>
let str = "안녕하세요"
undefined

str 
'안녕하세요'

str.length
5

let str2 = "여러분"
undefined

str2
'여러분'

str2.length
3