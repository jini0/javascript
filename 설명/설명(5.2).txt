<배열> 복습(지난주 금)
2가지형식
let arr = [1,2,3,4,5,6,7]        : 리터럴방식  [대괄호 열고 닫음]
or
let arr = new Array()          : 생성자 방식  --->new라는 것 이용 

for
while

arr[0]   index를 이용해서~
배열 method: pop / push / shift / unshift

-----------------
5/2  ★배열 너무 중요함★

*배열 메소드   
    ->03arr_method.html
Array.prototype으로부터 메소드와 프로퍼티를 상속받습니다.
1.원본 배열을 변경하지 않는 참조만 하는 메소드
★1)join() 배열의 모든 요소를 하나의 문자열로 반환
★2)slice() 시작인덱스 ~ 종료인덱스 바로 앞까지의 모든 배열요소를 추출하여 새로운 배열을 반환
★3)concat() 배열의 뒤에 인수로 전달받은 배열을 합쳐서 새로운 배열을 반환
★4)indexOf() 전달받은 값과 동일한 배열 요소가 처음으로 위치하는 인덱스를 반환
★5)includes() 전달받은 값과 동일한 배열요소가 있으면 true / 없으면 false를 반환

2.원본 배열을 변경하는 메소드
★1)push() 배열의  마지막 요소를 추가
★2)pop() 배열의 마지막 요소 제거
★3)shift() 배열의 첫번째 요소 제거
★4)unshift() 배열의 첫번째 요소 추가
★5)splice() 배열 요소를 제거하거나 새로운 배열요소를 추가
6)reverse() 배열요소의 순서를 반대로 교체함   --> 배열 요소의 순서가 1-2-3-4-5였다면 그걸 반대로 해줌

*Number 메소드    ->메모장2 참고
Number객체에 정의되어 있는 숫자와 관련된 작업을 할 때 사용되는 메소드
1.parselnt() 문자열에 포함된 숫자 부분을 정수 형태로 형변환
2.parseFloat() 문자열에 포함된 숫자 부분을 실수 형태로 형변환
3.isNaN() 전달된 값이 NaN인지 아닌지를 검사 (NaN이면 true / 아니면 false를 반환)
4.islnteger() 전달된 값이 정수인지 아닌지를 검사 (정수면 true / 아니면 false를 반환)

------
객체 - 다양한 데이터를 담을 수 있음
프로퍼티 (key:value)
메소드

프로퍼티와 메소드 등을 합칠 수도 있음 -> 객체

1.객체 리터럴 방식
let user = {}
ex> 
let user = {                           --> user라는 서랍장 만들고 그 안에 파일들이 있음 name과 age
	name: "green",	      그 안의 값으로 name에는 green / age는 30
	age: 30
}
user.name                         -->부르는 법도 두가지 방식 있음
user['name']

2.객체 생성자 방식
let user = new Object();

ex>
forEach
for(let item of arr)

for(let item in obj){		-->for-in반복문
	obj[item]
}

--
객체
프로퍼티 (key:value)
let cat = {
	name: '나비',			-->값이 담겨있는 애를 프로퍼티
	age: 3,				    값이 담겨있는 애를 프로퍼티
	weight: 4,				    값이 담겨있는 애를 프로퍼티
	sleep: function(){			-->key의 값으로 함수를 넣어주면 메소드가 됨
		console.log('쿨쿨잔다');	     sleep은 cat 객체의 메소드가 됨
	}
}		
	       함수로 했으니 부를 때는
cat.sleep();    -->이렇게 호출!!! (O)     -->'쿨쿨잔다'라는 메소드가 출력됨
sleep; (X)      -->바로 호출하는게 아니고 앞에 객체를 붙여줘야함

cf. function print(){				-->함수 
	console.log('출력했어요');
}
print();					-->함수 부를때

--
객체복사
-02objectcopy.html



----
<javascript내장객체>
 : javascript엔진이 구동되는 시점에 바로 제공되며 javascript코드 어디에서든 사용이 가능한 객체.
-Global
-Object
-String
-Number
-Boolean
-Date
-Array
-Math


*Math          --> 메모장설명2 참고
Math.random() 0보다 크고 1보다 작은 무작위 숫자를 반환(랜덤!)
Math.round() 인수로 전달받은 값을 소수점 첫번째 자리에서 반올림한 결과를 반환 
Math.floor() 인수로 전달받은 값을 소수점 첫번째 자리에서 내림한 결과를 반환  -->소수점 아래 다 자르는거
Math.ceil() 인수로 전달받은 값을 소수점 첫번째 자리에서 올림한 결과를 반환  -->무조건 올려주는거 1개더

Math.random() 0보다 크고 1보다 작은 무작위 숫자를 반환(랜덤!)
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9 

1은 안나옴!!!!!  
Math.random()*10 하면 10은 절대 안나옴(  Math.random()이 1은 안되니까!!)
-->이를 정수로 만들고 싶으면 Math.floor() 해주면 됨 

--
Math이용해서 문제풀기

1~45까지의 번호 중
6가지를 랜덤하게 출력







 